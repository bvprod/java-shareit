drop table IF EXISTS users cascade;
drop table IF EXISTS items cascade;
drop table IF EXISTS bookings cascade;
drop table IF EXISTS comments cascade;
drop table if EXISTS item_requests cascade;

CREATE TABLE IF NOT EXISTS users (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name VARCHAR(255) NOT NULL,
  email VARCHAR(512) NOT NULL,
  CONSTRAINT pk_user PRIMARY KEY (id),
  CONSTRAINT uq_user_email UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS items (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name VARCHAR(255) NOT NULL,
  description VARCHAR(5000) NOT NULL,
  is_available boolean NOT NULL,
  owner_id BIGINT references users (id),
  request_id BIGINT,
  CONSTRAINT pk_item PRIMARY KEY (id),
  CONSTRAINT uq_item_name UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS bookings (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  start_dttm timestamp NOT NULL,
  end_dttm timestamp NOT NULL,
  item_id bigint references items (id),
  booker_id BIGINT references users (id),
  status VARCHAR(10) NOT NULL,
  CONSTRAINT pk_booking PRIMARY KEY (id),
  check (start_dttm < end_dttm)
);

CREATE TABLE IF NOT EXISTS comments (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  comment_text VARCHAR(5000) NOT NULL,
  author_id bigint references users (id),
  item_id bigint references items (id),
  created_dttm timestamp NOT NULL,
  CONSTRAINT pk_comment PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS item_requests (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  description VARCHAR(5000) NOT NULL,
  requester_id BIGINT references users (id),
  created_dttm timestamp NOT NULL
);

